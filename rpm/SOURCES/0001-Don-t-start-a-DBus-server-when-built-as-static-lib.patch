From b3ffcafba67b01f6dcecb2525dca1c51bf218efa Mon Sep 17 00:00:00 2001
From: Erik van Pienbroek <epienbro@fedoraproject.org>
Date: Mon, 27 Aug 2012 22:57:01 +0200
Subject: [PATCH] Don't start a DBus server when built as static lib

The new Win32 DBus server code which was recently introduced works
by retrieving the path of the gio DLL and using rundll32.exe to
create a new process which starts a DBus server using the gio DLL.

This doesn't work when GLib is built as a static library as there is no
gio DLL available in that case. Therefore the code which tries to start
a DBus server using the above steps doesn't have to be executed as it
will always fail.

This commit makes sure that no attempt is done to start a DBus server when
using a static compiled GLib and that a proper error message is automatically
returned to the caller. This also fixes a compilation failure which occurs
when GLib is compiled as static library
---
 gio/gdbusaddress.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/gio/gdbusaddress.c b/gio/gdbusaddress.c
index fac22b7..8f57997 100644
--- a/gio/gdbusaddress.c
+++ b/gio/gdbusaddress.c
@@ -1354,7 +1354,6 @@ get_session_address_dbus_launch (GError **error)
 {
   HANDLE autolaunch_mutex, init_mutex;
   char *address = NULL;
-  wchar_t gio_path[MAX_PATH+1+200];
 
   autolaunch_mutex = acquire_mutex (DBUS_AUTOLAUNCH_MUTEX);
 
@@ -1365,8 +1364,11 @@ get_session_address_dbus_launch (GError **error)
 
   release_mutex (init_mutex);
 
+#ifdef DLL_EXPORT
+
   if (address == NULL)
     {
+      wchar_t gio_path[MAX_PATH+1+200];
       gio_path[MAX_PATH] = 0;
       if (GetModuleFileNameW (_g_io_win32_get_module (), gio_path, MAX_PATH))
 	{
@@ -1403,6 +1405,8 @@ get_session_address_dbus_launch (GError **error)
 	}
     }
 
+#endif
+
   release_mutex (autolaunch_mutex);
 
   if (address == NULL)
-- 
1.7.11.4

